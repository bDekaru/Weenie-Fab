<Window x:Class="WeenieFab.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WeenieFab"
        mc:Ignorable="d"
        Title="Weenie Fab" Height="775" Width="1200" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" WindowStartupLocation="CenterScreen" Icon="/weeniefactoryicon.ico" Closing="Window_Closing">


    <Window.Resources>
        <!--Control colors.-->
        <!--Light Ice Blue-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <!--Light Purplish Blue-->
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <!--Med Blueish Purple-->
        <Color x:Key="ContentAreaColorDark">#FF858fe5</Color>

        <!--Light Ice Blue-->
        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <!--Light Purplish Blue-->
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <!--Med Grey-->
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <!--Light Purplish Blue-->
        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <!--Light Silver-->
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>


        <!--Button Colors.-->
        <!-- White -->
        <Color x:Key="ControlLightColor">White</Color>
        <!-- Medium Ice Blue -->
        <Color x:Key="ControlMediumColor">#FFACC4EC</Color>
        <!-- Dark Purple -->
        <Color x:Key="ControlDarkColor">#FFd2a728</Color>


        <!--Mouse Over Colors-->
        <!-- Golden Rod-->
        <Color x:Key="ControlMouseOverColorTwo">#FFD3AC28</Color>
        <!--Blood Red-->
        <Color x:Key="ControlMouseOverColor">#FF8b0d00</Color>
        <!--Blood Red -->
        <Color x:Key="ControlPressedColor">#FF8b0d00</Color>


        <!-- Gray -->
        <Color x:Key="GlyphColor">#FF444444</Color>
        <!-- ???? -->
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>


        <!--Border colors-->
        <!-- Silver -->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <!-- Gray -->
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <!-- Dark Gray -->
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <!-- Gray -->
        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <!-- Dark Gray -->
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <!-- Lighte Medium Gray -->
        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <!-- Gray -->
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <!-- White -->
        <Color x:Key="DefaultBorderBrushLightBrush">White</Color>
        <!-- Black -->
        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>


        <!--Control-specific resources.-->
        <!-- Lilac -->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <!-- Black -->
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <!-- Lilac -->
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <!-- Med Light Purple -->
        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>






        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- FocusVisual -->

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="2"
                             StrokeThickness="2"
                             Stroke="#60000000"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button -->
        <Style TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="MinHeight"
          Value="23" />
            <Setter Property="MinWidth"
          Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border" CornerRadius="2" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style and template for the DataGrid.-->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"  Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border x:Name="border"
                        SnapsToDevicePixels="True"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="DG_ScrollViewer"
                            Focusable="false"
                            Background="Black">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                  Grid.Column="1"
                                                  Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                             Grid.Column="2"
                                             Grid.Row="1"
                                             Orientation="Vertical"
                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                             Maximum="{TemplateBinding ScrollableHeight}"
                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                             Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <Grid Grid.Column="1"
                                            Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping"
                Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll"
                Value="false" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Style and template for the DataGridCell.-->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DatagridCurrentCellBorderColor}" />
                                            </ColorAnimationUsingKeyFrames
                                                >
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style and template for the DataGridRow.-->
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="Validation.ErrorTemplate"
          Value="{x:Null}" />
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red"
                           Margin="2,0,0,0"
                           Text="!"
                           VerticalAlignment="Center" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Transparent" Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />

                                    <!--Provide a different appearance for every other row.-->
                                    <VisualState x:Name="Normal_AlternatingRow">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ContentAreaColorLight}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">

                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ContentAreaColorDark}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!--In this example, a row in Editing or selected mode has an
              identical appearances. In other words, the states 
              Normal_Selected, Unfocused_Selected, Normal_Editing, 
              MouseOver_Editing, MouseOver_Unfocused_Editing,
              and Unfocused_Editing are identical.-->
                                    <VisualState x:Name="Normal_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Unfocused_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColorTwo}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Normal_Editing">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMediumColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver_Editing">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver_Unfocused_Editing">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Unfocused_Editing">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMediumColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!--In this example, the appearance of a selected row 
              that has the mouse over it is the same regardless of
              whether the row is selected.  In other words, the states 
              MouseOver_Editing and MouseOver_Unfocused_Editing are identical.-->
                                    <VisualState x:Name="MouseOver_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColorTwo}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver_Unfocused_Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <DataGridDetailsPresenter Grid.Column="1"
                                      Grid.Row="1"
                                      Visibility="{TemplateBinding DetailsVisibility}"
                                      SelectiveScrollingGrid.SelectiveScrollingOrientation=
                                        "{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                <DataGridRowHeader Grid.RowSpan="2"
                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                   Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                    Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style and template for the ListView.-->
        <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
            TargetType="ScrollViewer">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <DockPanel Margin="{TemplateBinding Padding}">
                                <ScrollViewer DockPanel.Dock="Top"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Focusable="True">
                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                          Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContainerStyle="{Binding
                                            Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplate="{Binding
                                            Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplateSelector="{Binding 
                                            Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                          AllowsColumnReorder="{Binding
                                            Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContextMenu="{Binding
                                            Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderToolTip="{Binding
                                            Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>

                                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
                            </DockPanel>

                            <ScrollBar Name="PART_HorizontalScrollBar"
                                Orientation="Horizontal"
                                Grid.Row="1"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Value="{TemplateBinding HorizontalOffset}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                            <ScrollBar Name="PART_VerticalScrollBar"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Value="{TemplateBinding VerticalOffset}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewColumnHeaderGripper"
       TargetType="Thumb">
            <Setter Property="Width"
          Value="18" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                           EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle HorizontalAlignment="Center"
                             Width="1"
                             Fill="{TemplateBinding Background}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                        <GradientStop Color="Black"
                      Offset="0" />
                        <GradientStop Color="White"
                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type GridViewColumnHeader}"
       TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment"
          Value="Center" />
            <Setter Property="VerticalContentAlignment"
          Value="Center" />
            <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="HeaderBorder">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="HeaderBorder"
                              BorderThickness="0,1,0,1"
                              Padding="2,0,2,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.BorderBrush>
                                <Border.Background>

                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.Background>
                                <ContentPresenter x:Name="HeaderContent"
                                  Margin="0,0,0,1"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper"
                             HorizontalAlignment="Right"
                             Margin="0,0,-9,0"
                             Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role"
             Value="Floating">
                    <Setter Property="Opacity"
              Value="0.7" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Canvas Name="PART_FloatingHeaderCanvas">
                                    <Rectangle Fill="#60000000"
                                     Width="{TemplateBinding ActualWidth}"
                                     Height="{TemplateBinding ActualHeight}" />
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role"
             Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Border Name="HeaderBorder" BorderThickness="0,1,0,1">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlMediumColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ListView}"
       TargetType="ListView">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="VerticalContentAlignment"
          Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlLightColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ListViewItem}"
       TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border"
                        Padding="2"
                        SnapsToDevicePixels="true"
                        Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style and template for TextBox.-->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />

            <Setter Property="MinWidth"
          Value="50" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="AllowDrop"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="2" Padding="2" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Combo Box Style-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="2"
                    BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"  Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
                    CornerRadius="2,0,0,2"
                    Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                               Style="{x:Null}"
                               Template="{StaticResource ComboBoxTextBox}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Bottom"
                               Margin="3,3,23,3"
                               Focusable="True"
                               Background="Transparent"
                               Visibility="Hidden"
                               IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                          BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6"
                                        SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                             Value="false">
                                <Setter TargetName="DropDownBorder"
                                Property="MinHeight"
                                Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                             Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                               Property="AllowsTransparency"
                                Value="true">
                                <Setter TargetName="DropDownBorder"
                                Property="CornerRadius"
                                Value="4" />
                                <Setter TargetName="DropDownBorder"
                                Property="Margin"
                                Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}"
        TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"
            Value="true" />
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                        Padding="2"
                        SnapsToDevicePixels="true"
                        Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Tool Bar Template-->
        <Style x:Key="ToolBarButtonBaseStyle"
       TargetType="{x:Type ButtonBase}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="Border"
                        BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                    <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type Button}" />
        <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type ToggleButton}" />
        <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type CheckBox}" />
        <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type RadioButton}" />

        <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
       TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
            <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
            <Setter Property="AllowDrop"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border"
                Padding="2"
                BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolBarThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Cursor"
          Value="SizeAll" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Rectangle Margin="0,2">
                                <Rectangle.Fill>
                                    <DrawingBrush Viewport="0,0,4,4"
                                    ViewportUnits="Absolute"
                                    Viewbox="0,0,8,8"
                                    ViewboxUnits="Absolute"
                                    TileMode="Tile">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="#AAA"
                                                 Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z" />
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolBarOverflowButtonStyle"
       TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Border"
                        CornerRadius="0,3,3,0"
                        SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Path x:Name="Arrow"
                                Fill="Black"
                                VerticalAlignment="Bottom"
                                Margin="2,3"
                                Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ToolBar}"
       TargetType="{x:Type ToolBar}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Border x:Name="Border"
                        CornerRadius="2"
                        BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>

                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#FFF" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <DockPanel>
                                <ToggleButton DockPanel.Dock="Right"
                                IsEnabled="{TemplateBinding HasOverflowItems}"
                                Style="{StaticResource ToolBarOverflowButtonStyle}"
                                ClickMode="Press"
                                IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false" Focusable="false" PopupAnimation="Slide"
                                    IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="DropDownBorder" BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                            Margin="2"
                                            WrapWidth="200"
                                            Focusable="true"
                                            FocusVisualStyle="{x:Null}"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Border>
                                    </Popup>
                                </ToggleButton>

                                <Thumb x:Name="ToolBarThumb"
                                Style="{StaticResource ToolBarThumbStyle}" Width="10" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                IsItemsHost="true"
                                Margin="0,1,2,2" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen" Value="true">
                                <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ToolBarTray}"
       TargetType="{x:Type ToolBarTray}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                           EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#FFF"
                          Offset="0.0" />
                                <GradientStop Color="{DynamicResource WindowColor}"
                          Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid Background="#FFDEE2FF">
        <ToolBar HorizontalAlignment="Left" Height="33" VerticalAlignment="Top" Background="#FFDBE1E8" Width="512">
            <Button x:Name="btnNew" Content="_New" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnNew_Click" MinWidth="60" ToolTip="New Blank Weenie"/>
            <Button x:Name="btnOpenSqlFile" Content="_Open" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnOpenSqlFile_Click" MinWidth="60" ToolTip="Open Existing Weenie"/>
            <Button x:Name="btnSaveSqlFile" Content="_Save" VerticalAlignment="Top" Click="btnSaveSqlFile_Click" MinWidth="60" ToolTip="Save Weenie"/>
            <Button x:Name="btnSaveAsSqlFile" Content="Save _As" VerticalAlignment="Top" MinWidth="60" ToolTip="Save Weenie As" Click="btnSaveAsSqlFile_Click"/>
            <Button x:Name="btnOptions" Content="O_ptions" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnOptions_Click" MinWidth="60" ToolTip="Set Options"/>
            <Button x:Name="btnConverter" Content="_Converter" Height="22" Width="60" HorizontalAlignment="Left" VerticalAlignment="Top" Click="Button_Click" ToolTip="JSON File Converter"/>
            <Button x:Name="btnLootProfiler" Content="_LootProfiler" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnLootProfiler_Click" MinWidth="60" ToolTip="Death Treasure Loot Profiler"/>
            <Button x:Name="btnHelp" Content="_Help" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnHelp_Click" MinWidth="60" ToolTip="Your just curious now..."/>

        </ToolBar>


        <Label x:Name="lblWCID" Content="WCID:" HorizontalAlignment="Left" Margin="100,48,0,0" VerticalAlignment="Top" Height="25" Width="45"/>
        <Label x:Name="lblWeenieName" Content="Weenie Name:" HorizontalAlignment="Left" Margin="235,48,0,0" VerticalAlignment="Top" Height="25" Width="90"/>
        <Label x:Name="lblWeenieType" Content="Weenie Type:" HorizontalAlignment="Left" Margin="655,48,0,0" VerticalAlignment="Top" Height="25" Width="84"/>
        <TextBox x:Name="tbWCID" HorizontalAlignment="Left" Margin="150,50,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="68" Height="0" ToolTip="WCID for this weenie" MinHeight="22" MaxHeight="22"/>
        <TextBox x:Name="tbWeenieName" HorizontalAlignment="Left" Margin="325,50,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="0" Height="0" ToolTip="Name of Weenie" MaxWidth="353" MinWidth="300" MinHeight="22" MaxHeight="22"/>
        <ComboBox x:Name="cbWeenieType" HorizontalAlignment="Left" Margin="735,50,0,0" VerticalAlignment="Top" Width="233" ToolTip="Select the Type of Weenie" MinWidth="250" MinHeight="22" MaxHeight="23"/>

        <Grid Margin="0,55,0,0" Grid.ColumnSpan="2">
            <TabControl x:Name="tabControl" Margin="0,33,0,25">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Border Name="Border" Margin="2,2,0,0" BorderBrush="Lavender" BorderThickness="1,1,1,1" CornerRadius="5">
                                            <Border.Background>
                                                <!-- Unselected Tab Color -->
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF315b81"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="2,2,2,2" RecognizesAccessKey="True"/>
                                        </Border>
                                        <!-- Bottom of Tab-->
                                        <Rectangle Height="5" Width="73" Margin="0,0,0,0" Stroke="Black" VerticalAlignment="Bottom" HorizontalAlignment="Right" StrokeThickness="0" Fill="#FFE4F0F7"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <!-- Selected Tab-->
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" >
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF99b3ff"/>
                                                        <GradientStop Color="#FFE4F0F7" Offset="0.8"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="0" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="#FFC5C5C5" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="DemiBold"/>
                        <Setter Property="VerticalAlignment" Value="Top" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="UseLayoutRounding" Value="False" />
                    </Style>
                </TabControl.Resources>
                <TabItem x:Name="tiInt32" Header="Integer32">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Value" HorizontalAlignment="Left" Margin="92,83,0,0" VerticalAlignment="Top"/>
                        <Label Content="Integer 32" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbInt32Props" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" ItemsSource="{Binding Path=dInt}" Width="547" ToolTip="Select the Property You wish to Add/Change"/>
                        <TextBox x:Name="tbValue" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" ToolTip="Property value"/>
                        <Button x:Name="btnAddInt32" Content="Add " HorizontalAlignment="Left" Margin="315,84,0,0" VerticalAlignment="Top" Width="100" Click="btnAddInt32_Click" ToolTip="Add property"/>
                        <Button x:Name="btnUpdateInt32" Content="Update" HorizontalAlignment="Left" Margin="425,84,0,0" VerticalAlignment="Top" Click="btnUpdateInt32_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" IsDefault="True"/>
                        <Button x:Name="btnInt32Remove" Content="Remove" HorizontalAlignment="Left" Margin="535,84,0,0" VerticalAlignment="Top" Click="btnInt32Remove_Click" Width="100" ToolTip="Remove selected property"/>
                        <DataGrid x:Name="dgInt32" ItemsSource="{Binding}" Margin="92,125,202,30" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" DataGridCell.Selected="dgInt32_RowSelected" MinWidth="5" ToolTip="Select a property to edit/change" MinHeight="400" MaxHeight="600" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Path=Property}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Value" IsReadOnly="True"  Binding="{Binding Path=Value}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Path=Description}" Width="8*"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Integer 64">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Integer 64" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <Label Content="Value" HorizontalAlignment="Left" Margin="92,83,0,0" VerticalAlignment="Top" Grid.Column="1"/>
                        <ComboBox x:Name="cbInt64Props" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" ItemsSource="{Binding dInt}" Width="547" ToolTip="Select the Property You wish to Add/Change"/>
                        <TextBox x:Name="tb64Value" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" ToolTip="Property Value"/>
                        <Button x:Name="btnAddInt64" Content="Add " HorizontalAlignment="Left" Margin="315,84,0,0" VerticalAlignment="Top" Width="100" Click="btnAddInt64_Click" ToolTip="Add property"/>
                        <Button x:Name="btnUpdateInt64" Content="Update" HorizontalAlignment="Left" Margin="425,84,0,0" VerticalAlignment="Top" Click="btnUpdateInt64_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" IsDefault="True"/>
                        <Button x:Name="btnRemoveInt64" Content="Remove" HorizontalAlignment="Left" Margin="535,84,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveInt64_Click" ToolTip="Remove selected property"/>

                        <DataGrid x:Name="dgInt64" ItemsSource="{Binding}" Margin="92,125,202,30" AutoGenerateColumns="False" DataGridCell.Selected="dgInt64_RowSelected" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a property to edit/change" MinWidth="5" MinHeight="420" MaxHeight="598" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Property}" Width="1*"/>
                                <DataGridTextColumn Header="Value" IsReadOnly="True"  Binding="{Binding Value}" Width="1*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="8*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Boolean" Background="#FFE1E8F5">
                    <Grid Background="#FFE1E8F5">

                        <Label Content="Boolean" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbBoolProps" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" ItemsSource="{Binding dInt}" Width="547" ToolTip="Select the property you wish to Add/Change"/>
                        <RadioButton x:Name="rbTrue" Content="True" HorizontalAlignment="Left" Margin="94,90,0,0" VerticalAlignment="Top" FontSize="14" ToolTip="Property = True"/>
                        <RadioButton x:Name="rbFalse" Content="False" HorizontalAlignment="Left" Margin="165,90,0,0" VerticalAlignment="Top" FontSize="14" ToolTip="Property = False"/>
                        <Button x:Name="btnAddBool" Content="Add " HorizontalAlignment="Left" Margin="315,84,0,0" VerticalAlignment="Top" Width="100" Click="btnAddBool_Click" ToolTip="Add property"/>
                        <Button x:Name="btnUpdateBool" Content="Update" HorizontalAlignment="Left" Margin="425,84,0,0" VerticalAlignment="Top" Click="btnUpdateBool_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" IsDefault="True"/>
                        <Button x:Name="btnRemoveBool" Content="Remove" HorizontalAlignment="Left" Margin="535,84,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveBool_Click"  ToolTip="Remove selected property"/>
                        <DataGrid x:Name="dgBool" ItemsSource="{Binding}" Margin="92,125,202,30" AutoGenerateColumns="False" DataGridCell.Selected="dgBool_RowSelected" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a property to edit/change" MinWidth="5" MinHeight="420" MaxHeight="600" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Property}" Width="1*"/>
                                <DataGridTextColumn Header="Value" IsReadOnly="True"  Binding="{Binding Value}" Width="1*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="8*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Float">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Decimal" HorizontalAlignment="Left" Margin="92,63,0,0" VerticalAlignment="Top"/>
                        <Label Content="Float" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbFloatProps" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" ItemsSource="{Binding dInt}" Width="547" ToolTip="Select the Property you wish to Add/Change"/>
                        <TextBox x:Name="tbFloatValue" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="92,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" ToolTip="Float Value (you can use decimals)"/>
                        <Button x:Name="btnAddFloat" Content="Add " HorizontalAlignment="Left" Margin="315,84,0,0" VerticalAlignment="Top" Width="100" Click="btnAddFloat_Click" ToolTip="Add property"/>
                        <Button x:Name="btnUpdateFloat" Content="Update" HorizontalAlignment="Left" Margin="425,84,0,0" VerticalAlignment="Top" Click="btnUpdateFloat_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" IsDefault="True"/>
                        <Button x:Name="btnRemoveFloat" Content="Remove" HorizontalAlignment="Left" Margin="535,84,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveFloat_Click" ToolTip="Remove selected property"/>
                        <DataGrid x:Name="dgFloat" ItemsSource="{Binding}" Margin="92,125,202,30" AutoGenerateColumns="False" DataGridCell.Selected="dgFloat_RowSelected" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a property to edit/change" MinWidth="5" MinHeight="410" MaxHeight="600" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Property}" Width="1*"/>
                                <DataGridTextColumn Header="Value" IsReadOnly="True"  Binding="{Binding Value}" Width="1*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="8*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="String">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="String" HorizontalAlignment="Left" Margin="92,63,0,0" VerticalAlignment="Top"/>
                        <Label Content="String Property" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbStringProps" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" ItemsSource="{Binding dInt}" Width="398" ToolTip="Select the Property You wish to Add/Change"/>
                        <TextBox x:Name="tbStringValue" HorizontalAlignment="Left" Margin="92,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="0" ToolTip="String Text" MaxWidth="500" MinWidth="900"/>
                        <Button x:Name="btnAddString" Content="Add " HorizontalAlignment="Left" Margin="95,122,0,0" VerticalAlignment="Top" Width="100" Click="btnAddString_Click" ToolTip="Add property" Padding="0,3,0,0"/>
                        <Button x:Name="btnUpdateString" Content="Update" HorizontalAlignment="Left" Margin="205,122,0,0" VerticalAlignment="Top" Click="btnUpdateString_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" Padding="0,3,0,0" IsDefault="True"/>
                        <Button x:Name="btnRemoveString" Content="Remove" HorizontalAlignment="Left" Margin="315,122,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveString_Click" ToolTip="Remove selected property" Padding="0,3,0,0"/>
                        <DataGrid x:Name="dgString" ItemsSource="{Binding}" Margin="92,160,202,30" AutoGenerateColumns="False" DataGridCell.Selected="dgString_RowSelected" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a property to edit/change" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MaxHeight="700" MinWidth="5" MinHeight="375" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Property}" Width="1*"/>
                                <DataGridTextColumn Header="String" IsReadOnly="True"  Binding="{Binding Value}" Width="6.5*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="2.5*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Data ID">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Value" HorizontalAlignment="Left" Margin="92,63,0,0" VerticalAlignment="Top"/>
                        <Label Content="Data ID" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbDiDProps" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" ItemsSource="{Binding dInt}" Width="547" ToolTip="Select the Property You wish to Add/Change"/>
                        <TextBox x:Name="tbDiDValue" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" ToolTip="DID value"/>
                        <Button x:Name="btnAddDiD" Content="Add " HorizontalAlignment="Left" Margin="315,84,0,0" VerticalAlignment="Top" Width="100" Click="btnAddDiD_Click" ToolTip="Add property"/>
                        <Button x:Name="btnUpdateDiD" Content="Update" HorizontalAlignment="Left" Margin="427,84,0,0" VerticalAlignment="Top" Click="btnUpdateDiD_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" IsDefault="True"/>
                        <Button x:Name="btnRemoveDiD" Content="Remove" HorizontalAlignment="Left" Margin="538,84,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveDiD_Click" ToolTip="Remove selected property"/>
                        <DataGrid x:Name="dgDiD" ItemsSource="{Binding}" Margin="92,117,202,32" AutoGenerateColumns="False" DataGridCell.Selected="dgDiD_RowSelected" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a property to edit/change" MinWidth="5" MinHeight="420" MaxHeight="600" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Property}" Width="1*"/>
                                <DataGridTextColumn Header="Value" IsReadOnly="True"  Binding="{Binding Value}" Width="1*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="8*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Attribs/Skills">
                    <Grid Background="#FFE1E8F5" RenderTransformOrigin="0.482,0.5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Label Content="Attributes" HorizontalAlignment="Left" Margin="238,2,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
                        <Label Content="Strength" HorizontalAlignment="Left" Margin="90,30,0,0" VerticalAlignment="Top"/>
                        <Label Content="Endurance" HorizontalAlignment="Left" Margin="90,55,0,0" VerticalAlignment="Top"/>
                        <Label Content="Quickness" HorizontalAlignment="Left" Margin="90,106,0,0" VerticalAlignment="Top"/>
                        <Label Content="Coordination" HorizontalAlignment="Left" Margin="90,82,0,0" VerticalAlignment="Top"/>
                        <Label Content="Focus" HorizontalAlignment="Left" Margin="90,130,0,0" VerticalAlignment="Top"/>
                        <Label Content="Self" HorizontalAlignment="Left" Margin="90,155,0,0" VerticalAlignment="Top"/>
                        <Label Content="Health, Stamina, Mana" HorizontalAlignment="Left" Margin="205,350,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
                        <Label Content="Health" HorizontalAlignment="Left" Margin="85,395,0,0" VerticalAlignment="Top"/>
                        <Label Content="Stamina" HorizontalAlignment="Left" Margin="85,420,0,0" VerticalAlignment="Top"/>
                        <Label Content="Mana" HorizontalAlignment="Left" Margin="85,445,0,0" VerticalAlignment="Top"/>
                        <Label Content="Init Level" HorizontalAlignment="Left" Margin="140,370,0,0" VerticalAlignment="Top"/>
                        <Label Content="Current Level" HorizontalAlignment="Left" Margin="210,370,0,0" VerticalAlignment="Top"/>
                        <Label Content="Skills" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" FontWeight="Bold" Grid.Column="2"/>
                        <Label Content="Skill Level" HorizontalAlignment="Left" Margin="55,125,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                        <Label Content="Skill Final Level" HorizontalAlignment="Left" Margin="165,125,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                        <Label Content="Skill Type" HorizontalAlignment="Left" Margin="55,30,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                        <Label Content="(Set Attributes First)" HorizontalAlignment="Left" Margin="340,385,0,0" VerticalAlignment="Top"/>
                        <Label Content="(Set Attributes First)" HorizontalAlignment="Left" Margin="368,105,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                        <TextBox x:Name="tbAttribStrength" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="180,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Set the amount of Strength"/>
                        <TextBox x:Name="tbAttribEndurance" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="180,55,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Set the amount of Endurance"/>
                        <TextBox x:Name="tbAttribCoordination" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="180,80,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Set the amount of Coordination"/>
                        <TextBox x:Name="tbAttribQuickness" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="180,105,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Set the amount of Quickness"/>
                        <TextBox x:Name="tbAttribFocus" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="180,130,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Set the amount of Focus"/>
                        <TextBox x:Name="tbAttribSelf" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="180,155,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Set the amount of Self (Willpower)"/>
                        <Button x:Name="btnAttribUpdate" Content="Update" HorizontalAlignment="Left" Margin="305,155,0,0" VerticalAlignment="Top" Width="80" Grid.ColumnSpan="2" Click="btnAttribUpdate_Click" ToolTip="Update all Attributes"/>
                        <Button x:Name="btnAttribDefaults" Content="Defaults" HorizontalAlignment="Left" Margin="346,120,0,0" VerticalAlignment="Top" Width="100" Click="btnAttribDefaults_Click" ToolTip="Set Basic Defaults"/>
                        <Button x:Name="btnAttribClear" Content="Clear" HorizontalAlignment="Left" Margin="410,155,0,0" VerticalAlignment="Top" Width="80" Click="btnAttribClear_Click" ToolTip="Clear all Attributes"/>
                        <CheckBox x:Name="chkbAutoHealth" Content="Auto Calculate" Checked="chkbAutoHealth_Changed" Unchecked="chkbAutoHealth_Changed" HorizontalAlignment="Left" Margin="345,377,0,0" VerticalAlignment="Top" IsChecked="True" ToolTip="Check if you want Weenie Fab to auto calcutate values" KeyboardNavigation.IsTabStop="False"/>
                        <TextBox x:Name="tbHealthInitLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" IsReadOnly="{Binding ElementName=chkbAutoHealth, Path=IsChecked}" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="140,395,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" ToolTip="Health Amount to add to Endurance (Endurance /2)"/>
                        <TextBox x:Name="tbStaminaInitLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" IsReadOnly="{Binding ElementName=chkbAutoHealth, Path=IsChecked}" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="140,420,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" ToolTip="Stamina Amount to add to Endurance (Endurance)"/>
                        <TextBox x:Name="tbManaInitLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" IsReadOnly="{Binding ElementName=chkbAutoHealth, Path=IsChecked}" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="140,445,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" ToolTip="Mana Amount to add to Self (Self)"/>
                        <TextBox x:Name="tbHealthCurrentLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" TextChanged="tbHealthCurrentLevel_TextChanged" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="220,395,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" ToolTip="Max Health (includes Endurance Attribute)"/>
                        <TextBox x:Name="tbStaminaCurrentLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" TextChanged="tbStaminaCurrentLevel_TextChanged"  PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="221,420,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" ToolTip="Max Stamina (includes Endurance Attribute)"/>
                        <TextBox x:Name="tbManaCurrentLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" TextChanged="tbManaCurrentLevel_TextChanged" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="221,445,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" ToolTip="Max Mana (includes Self Attribute)"/>
                        <Button x:Name="btnAttrib2Update" Content="Update" HorizontalAlignment="Left" Margin="305,445,0,0" VerticalAlignment="Top" Width="80" Grid.ColumnSpan="2" Click="btnAttrib2Update_Click" ToolTip="Update Health/Stamina/Mana values" />
                        <Button x:Name="btnAttrib2Defaults" Content="Defaults" HorizontalAlignment="Left" Margin="345,415,0,0" VerticalAlignment="Top" Width="100" Click="btnAttrib2Defaults_Click" ToolTip="Set Basic Defaults"/>
                        <Button x:Name="btnAttrib2Clear" Content="Clear" HorizontalAlignment="Left" Margin="410,445,0,0" VerticalAlignment="Top" Width="80" Click="btnAttrib2Clear_Click" ToolTip="Clear Health/Stamina/Mana Values"/>
                        <ComboBox x:Name="cbSkillType" SelectionChanged="cbSkillType_SelectionChanged" HorizontalAlignment="Left" Margin="55,60,0,0" VerticalAlignment="Top" Grid.Column="1" Width="500" ToolTip="Select the Skill you wish to Add/Change"/>
                        <RadioButton x:Name="rdbSpec" Content="Specialized" Grid.Column="1" HorizontalAlignment="Left" Margin="60,100,0,0" VerticalAlignment="Top" FontWeight="Bold" ToolTip="Select if you want skill Specialized"/>
                        <RadioButton x:Name="rdbTrained" Content="Trained" Grid.Column="1" HorizontalAlignment="Left" Margin="190,100,0,0" VerticalAlignment="Top" FontWeight="Bold" IsChecked="True" ToolTip="Select if you want skill Trained"/>
                        <TextBox x:Name="tbSkillLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" IsReadOnly="{Binding ElementName=chkbSkillCalc, Path=IsChecked}" TextChanged="tbSkillLevel_TextChanged" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="55,150,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" Grid.Column="2" ToolTip="Skill Level (Attributes not inculded)"/>
                        <TextBox x:Name="tbSkillFinalLevel" GotMouseCapture="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotFocus" IsEnabled="{Binding ElementName=chkbSkillCalc, Path=IsChecked}" TextChanged="tbSkillFinalLevel_TextChanged" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="170,150,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" Grid.Column="2" ToolTip="Set the final Skill level you want.  Skill Level will be calculted if you have option enabled."/>
                        <Button x:Name="btnSkillsAdd" Content="Add" HorizontalAlignment="Left" Margin="295,150,0,0" VerticalAlignment="Top" Width="80" Grid.Column="2" Click="btnSkillsAdd_Click" ToolTip="Add Skill"/>
                        <Button x:Name="btnSkillsUpdate" Content="Update" HorizontalAlignment="Left" Margin="385,150,0,0" VerticalAlignment="Top" Width="80" Grid.Column="2" Click="btnSkillsUpdate_Click" ToolTip="Update Skill" IsDefault="True"/>
                        <Button x:Name="btnSkillsRemove" Content="Remove" HorizontalAlignment="Left" Margin="475,150,0,0" VerticalAlignment="Top" Width="80" Grid.Column="2" Click="btnSkillsRemove_Click" ToolTip="Remove Skill"/>
                        <CheckBox x:Name="chkbSkillCalc" Checked="chkbSkillCalc_Changed" Unchecked="chkbSkillCalc_Changed" Content="Auto Calculate Skill" Grid.Column="1" HorizontalAlignment="Left" Margin="355,95,0,0" VerticalAlignment="Top" IsChecked="True" ToolTip="Check if you want WeenieFab to do the calcs for you" KeyboardNavigation.IsTabStop="False"/>

                        <DataGrid x:Name="dgAttributes" ItemsSource="{Binding}" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" AutoGenerateColumns="False" Margin="85,185,0,0" HorizontalAlignment="Left" Width="406" Height="160" VerticalAlignment="Top" Grid.ColumnSpan="2" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding Path=Type}" Width="1.2*"></DataGridTextColumn>
                                <DataGridTextColumn Header="InitLevel" IsReadOnly="True" Binding="{Binding Path=InitLevel}" Width="2*"></DataGridTextColumn>
                                <DataGridTextColumn Header="LevelCP" IsReadOnly="True" Binding="{Binding Path=LevelCP}" Width="2*"></DataGridTextColumn>
                                <DataGridTextColumn Header="CPSpent" IsReadOnly="True" Binding="{Binding Path=CPSpent}" Width="2*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Description" IsReadOnly="True" Binding="{Binding Path=Description}" Width="2.8*"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid x:Name="dgAttributesTwo" ItemsSource="{Binding}" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" AutoGenerateColumns="False" Margin="85,475,0,0" HorizontalAlignment="Left" Width="406" Height="105" VerticalAlignment="Top" Grid.ColumnSpan="2" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding Path=Type}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="InitLevel" IsReadOnly="True"  Binding="{Binding Path=InitLevel}" Width="1.4*"></DataGridTextColumn>
                                <DataGridTextColumn Header="LevelCP" IsReadOnly="True"  Binding="{Binding Path=LevelCP}" Width="1.3*"></DataGridTextColumn>
                                <DataGridTextColumn Header="CPSpent" IsReadOnly="True"  Binding="{Binding Path=CPSpent}" Width="1.4*"></DataGridTextColumn>
                                <DataGridTextColumn Header="CurrentLevel" IsReadOnly="True"  Binding="{Binding Path=CurrentLevel}" Width="2.1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Path=Description}" Width="2.9*"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid x:Name="dgSkills" ItemsSource="{Binding}" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" AutoGenerateColumns="False" Margin="55,180,0,0" VerticalAlignment="Top" Height="398" Grid.Column="2" HorizontalAlignment="Left" Width="500" DataGridCell.Selected="dgSkills_RowSelected" ToolTip="Select a skill to edit/change" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding Path=Type}" Width="0.7*"></DataGridTextColumn>
                                <DataGridTextColumn Header="LevelPP" IsReadOnly="True"  Binding="{Binding Path=LevelPP}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="SAC" IsReadOnly="True"  Binding="{Binding Path=SAC}" Width="0.6*"></DataGridTextColumn>
                                <DataGridTextColumn Header="PP" IsReadOnly="True"  Binding="{Binding Path=PP}" Width="0.5*"></DataGridTextColumn>
                                <DataGridTextColumn Header="InitLevel" IsReadOnly="True"  Binding="{Binding Path=InitLevel}" Width="1.2*"></DataGridTextColumn>
                                <DataGridTextColumn Header="ResistLC" IsReadOnly="True"  Binding="{Binding Path=ResistLC}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="LastUsed" IsReadOnly="True"  Binding="{Binding Path=LastUsed}" Width="1.2*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Path=Description}" Width="3.8*"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="BodyParts">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Body Part" HorizontalAlignment="Left" Margin="70,0,0,0" VerticalAlignment="Top"/>
                        <Label Content="Damage Type" HorizontalAlignment="Left" Margin="300,0,0,0" VerticalAlignment="Top"/>
                        <Label Content="Damage Value" HorizontalAlignment="Left" Margin="550,0,0,0" VerticalAlignment="Top" UseLayoutRounding="True"/>
                        <Label Content="Damage Variance" HorizontalAlignment="Left" Margin="700,0,0,0" VerticalAlignment="Top" UseLayoutRounding="True"/>
                        <Label Content="Body Part Height" HorizontalAlignment="Left" Margin="1000,0,0,0" VerticalAlignment="Top"/>
                        <Label Content="High" HorizontalAlignment="Left" Margin="50,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Middle" HorizontalAlignment="Left" Margin="120,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Low" HorizontalAlignment="Left" Margin="190,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Left Front Quadrant" HorizontalAlignment="Left" Margin="77,65,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <Label Content="Middle" HorizontalAlignment="Left" Margin="360,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="High" HorizontalAlignment="Left" Margin="290,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Low" HorizontalAlignment="Left" Margin="430,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Right Front Quadrant" HorizontalAlignment="Left" Margin="313,60,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <Label Content="High" HorizontalAlignment="Left" Margin="709,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Middle" HorizontalAlignment="Left" Margin="780,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Low" HorizontalAlignment="Left" Margin="851,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Left Back Quadrant" HorizontalAlignment="Left" Margin="741,60,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <Label Content="High" HorizontalAlignment="Left" Margin="939,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Middle" HorizontalAlignment="Left" Margin="1010,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Low" HorizontalAlignment="Left" Margin="1081,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Right Back Quadrant" HorizontalAlignment="Left" Margin="964,60,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <ComboBox x:Name="cbBodyPart" HorizontalAlignment="Left" Margin="70,25,0,0" VerticalAlignment="Top" Width="120" MinWidth="200" ToolTip="Select Body Part"/>
                        <ComboBox x:Name="cbBodyPartDamageType" HorizontalAlignment="Left" Margin="300,25,0,0" VerticalAlignment="Top" Width="120" MinWidth="200" ToolTip="Select Body Part Damage Type"/>
                        <TextBox x:Name="tbBodyPartDamageValue" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="550,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" ToolTip="How much damage body part does"/>
                        <TextBox x:Name="tbBodyPartDamageVariance" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="700,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" ToolTip="Body part damage variance"/>
                        <TextBox x:Name="tbBodyPartBase_Height" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="1000,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" ToolTip="Height of the body part (1=High, 2=Middle, 3=Low)"/>
                        <TextBox x:Name="tbBodyPartQuadHighLF" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="50,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50" MinWidth="50"/>
                        <TextBox x:Name="tbBodyPartQuadMiddleLF" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="120,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadLowLF" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="190,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadHighRF" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="290,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadMiddleRF" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="360,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadLowRF" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="430,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadHighLB" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="710,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadMiddleLB" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="780,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadLowLB" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="850,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadHighRB" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="940,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadMiddleRB" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="1010,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <TextBox x:Name="tbBodyPartQuadLowRB" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="1080,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
                        <Button x:Name="btnAddBodyPart" Content="Add" HorizontalAlignment="Left" Margin="466,235,0,0" VerticalAlignment="Top" Click="btnAddBodyPart_Click" ToolTip="Add Body Party"/>
                        <Button x:Name="btnUpdateBodyPart" Content="Update" HorizontalAlignment="Left" Margin="561,235,0,0" VerticalAlignment="Top" Click="btnUpdateBodyPart_Click" ToolTip="Update Body Part" IsDefault="True"/>
                        <Button x:Name="btnRemoveBodyPart" Content="Remove" HorizontalAlignment="Left" Margin="655,235,0,0" VerticalAlignment="Top" Click="btnRemoveBodyPart_Click" ToolTip="Remove Body Part"/>
                        <Button x:Name="btnBodyPartHelpWiki" Content="Body Parts Help (wiki)" HorizontalAlignment="Center" Margin="0,104,0,0" VerticalAlignment="Top" Click="btnBodyPartHelpWiki_Click"/>
                        <Button x:Name="btnGenerateBodyTable" Content="GenBodyTable" HorizontalAlignment="Left" Margin="342,237,0,0" VerticalAlignment="Top" Click="btnGenerateBodyTable_Click"/>
                        <DataGrid x:Name="dgBodyParts" ItemsSource="{Binding}" DataGridCell.Selected="dgBodyParts_RowSelected" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" MinWidth="1100" MinHeight="250" VerticalAlignment="Top" HorizontalAlignment="Left" MaxWidth="1100" MaxHeight="255" ToolTip="Select a body part to edit/change" Margin="40,270,0,0" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="BodyPart" IsReadOnly="True" Binding="{Binding BodyPart}" Width="0.55*"/>
                                <DataGridTextColumn Header="DmgType" IsReadOnly="True"  Binding="{Binding DamageType}" Width="0.55*"/>
                                <DataGridTextColumn Header="Dmg" IsReadOnly="True"  Binding="{Binding Damage}" Width="0.35*"/>
                                <DataGridTextColumn Header="Variance" IsReadOnly="True"  Binding="{Binding DamageVariance}" Width="0.5*"/>

                                <DataGridTextColumn Header="AL" IsReadOnly="True"  Binding="{Binding ArmorLevel}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALS" IsReadOnly="True"  Binding="{Binding ArmorLevelSlash}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALP" IsReadOnly="True"  Binding="{Binding ArmorLevelPierce}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALB" IsReadOnly="True"  Binding="{Binding ArmorLevelBludgeon}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALC" IsReadOnly="True"  Binding="{Binding ArmorLevelCold}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALF" IsReadOnly="True"  Binding="{Binding ArmorLevelFire}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALA" IsReadOnly="True"  Binding="{Binding ArmorLevelAcid}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALE" IsReadOnly="True"  Binding="{Binding ArmorLevelElectric}" Width="0.3*"/>
                                <DataGridTextColumn Header="ALN" IsReadOnly="True"  Binding="{Binding ArmorLevelNether}" Width="0.3*"/>

                                <DataGridTextColumn Header="Height" IsReadOnly="True"  Binding="{Binding Height}" Width="0.45*"/>

                                <DataGridTextColumn Header="HLF" IsReadOnly="True"  Binding="{Binding HLF}" Width="0.3*"/>
                                <DataGridTextColumn Header="MLF" IsReadOnly="True"  Binding="{Binding MLF}" Width="0.3*"/>
                                <DataGridTextColumn Header="LLF" IsReadOnly="True"  Binding="{Binding LLF}" Width="0.3*"/>

                                <DataGridTextColumn Header="HRF" IsReadOnly="True"  Binding="{Binding HRF}" Width="0.3*"/>
                                <DataGridTextColumn Header="MRF" IsReadOnly="True"  Binding="{Binding MRF}" Width="0.3*"/>
                                <DataGridTextColumn Header="LRF" IsReadOnly="True"  Binding="{Binding LRF}" Width="0.3*"/>

                                <DataGridTextColumn Header="HLB" IsReadOnly="True"  Binding="{Binding HLB}" Width="0.3*"/>
                                <DataGridTextColumn Header="MLB" IsReadOnly="True"  Binding="{Binding MLB}" Width="0.3*"/>
                                <DataGridTextColumn Header="LLB" IsReadOnly="True"  Binding="{Binding LLB}" Width="0.3*"/>

                                <DataGridTextColumn Header="HRB" IsReadOnly="True"  Binding="{Binding HRB}" Width="0.3*"/>
                                <DataGridTextColumn Header="MRB" IsReadOnly="True"  Binding="{Binding MRB}" Width="0.3*"/>
                                <DataGridTextColumn Header="LRB" IsReadOnly="True"  Binding="{Binding LRB}" Width="0.3*"/>

                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="0.75*"/>

                            </DataGrid.Columns>
                        </DataGrid>
                        <RichTextBox x:Name="rtbBodyParts" FontFamily="Courier New" FontSize="11" Grid.ColumnSpan="2" Background="White" HorizontalAlignment="Center" Margin="10,50,10,10" AcceptsTab="True" IsTabStop="False" VerticalAlignment="Bottom" MinHeight="130" MaxHeight="130">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text=""/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <Grid HorizontalAlignment="Left" Height="99" Margin="336,136,0,0" VerticalAlignment="Top" Width="508">
                            <Label Content="Base" HorizontalAlignment="Left" Margin="8,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevel" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="0,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Base Armor Level" TextChanged="tbBodyPartArmorLevel_TextChanged"/>
                            <Label Content="Slash" HorizontalAlignment="Left" Margin="64,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelSlash" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="57,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Slash Armor Level" IsReadOnly="True"/>
                            <Label Content="Pierce" HorizontalAlignment="Left" Margin="119,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelPierce" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="114,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Pierce Armor Level" IsReadOnly="True"/>
                            <Label Content="Bludgeon" HorizontalAlignment="Left" Margin="167,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelBludgeon" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="171,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Bludgeon Armor Level" IsReadOnly="True"/>
                            <Label Content="Cold" HorizontalAlignment="Center" Margin="0,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelCold" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Center" Margin="0,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Cold Armor Level" IsReadOnly="True"/>
                            <Label Content="Fire" HorizontalAlignment="Left" Margin="296,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelFire" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="285,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Fire Armor Level" IsReadOnly="True"/>
                            <Label Content="Acid" HorizontalAlignment="Left" Margin="350,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelAcid" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="342,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Acid Armor Level" IsReadOnly="True"/>
                            <Label Content="Electric" HorizontalAlignment="Left" Margin="400,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelElectric" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="398,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Electric Armor Level" IsReadOnly="True"/>
                            <Label Content="Nether" HorizontalAlignment="Left" Margin="459,29,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="tbBodyPartArmorLevelNether" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="455,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="52" ToolTip="Body Part Nether Armor Level" IsReadOnly="True"/>
                            <Label Content="Armor" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="14"/>
                            <Label Content="To change these values edit the appropriate float property(ArmorModVsX)" HorizontalAlignment="Left" Margin="72,71,0,0" VerticalAlignment="Top"/>
                        </Grid>
                        <Label Content="Multiply Armor By Factor" HorizontalAlignment="Left" Margin="987,168,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="tbMultiplyAllArmor" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="1065,191,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="77" ToolTip="Multiply all armor by this value"/>
                        <Button x:Name="btnScaleArmor" Content="Scale" HorizontalAlignment="Left" Margin="983,190,0,0" VerticalAlignment="Top" ToolTip="Multiply All Armor by Factor" Click="btnScaleArmor_Click"/>
                    </Grid>
                </TabItem>
                <TabItem Header="SpellBook">
                    <Grid Background="#FFE1E8F5">
                        <TextBlock HorizontalAlignment="Left" Margin="300,0,20,0" VerticalAlignment="Top">
                            To see how to use this feature, please see the WeenieFab Wiki:
                            <Hyperlink NavigateUri="https://github.com/harliq/Weenie-Fab/wiki/Spellbook" RequestNavigate="Hyperlink_RequestNavigate">
                                WeenieFab Wiki - Spellbook Tab
                            </Hyperlink>
                        </TextBlock>
                        <Label Content="Probabilitly (Float)" HorizontalAlignment="Left" Margin="625,85,0,0" VerticalAlignment="Top"/>
                        <Label Content="Spell ID" HorizontalAlignment="Left" Margin="466,85,0,0" VerticalAlignment="Top"/>
                        <Label Content="Spell Description" HorizontalAlignment="Left" Margin="466,135,0,0" VerticalAlignment="Top"/>
                        <Label Content="Spell Name Search" HorizontalAlignment="Left" Margin="80,7,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="tbSpellSearch" HorizontalAlignment="Left" Margin="86,35,0,0" TextChanged="txtFilter_TextChanged" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" MinWidth="350" MaxWidth="350" ToolTip="Type in the name of the Spell"/>
                        <ListView x:Name="lvSpellsList" SelectionChanged="lvSpellsList_SelectionChanged" MaxWidth="350" MaxHeight="197" Margin="85,65,0,0" MinWidth="300" MinHeight="200" HorizontalAlignment="Left" VerticalAlignment="Top" ToolTip="Select Spell">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Spell ID" Width="50" DisplayMemberBinding="{Binding SpellID}"/>
                                    <GridViewColumn Header="Spell Name" Width="300" DisplayMemberBinding="{Binding SpellName}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <TextBox x:Name="tbSpellId" Text="{Binding ElementName=lvSpellsList, Path=SelectedItem.SpellID}" HorizontalAlignment="Left" Margin="466,110,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" ToolTip="Spell ID"/>
                        <TextBox x:Name="tbSpellValue" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="625,110,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="106" ToolTip="How often will a spell be cast"/>
                        <TextBox x:Name="tbSpellDescription" Text="{Binding ElementName=lvSpellsList, Path=SelectedItem.SpellName}" HorizontalAlignment="Left" Margin="466,161,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MinWidth="350" MaxWidth="350" ToolTip="The name of the spell"/>
                        <Button x:Name="btnAddSpell1" Content="Add " HorizontalAlignment="Left" Margin="466,191,0,0" VerticalAlignment="Top" Width="100" Click="btnAddSpell_Click" ToolTip="Add spell"/>
                        <Button x:Name="btnUpdateSpell1" Content="Update" HorizontalAlignment="Left" Margin="591,191,0,0" VerticalAlignment="Top" Click="btnUpdateSpell_Click" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected spell" IsDefault="True"/>
                        <Button x:Name="btnRemoveSpell1" Content="Remove" HorizontalAlignment="Left" Margin="716,191,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveSpell_Click" ToolTip="Remove selected spell"/>
                        <Button x:Name="btnGenerateProbability" Content="Generate Probability Details" HorizontalAlignment="Left" Margin="466,242,0,0" VerticalAlignment="Top" Width="163" Click="btnGenerateProbability_Click"/>
                        <DataGrid x:Name="dgSpell" ItemsSource="{Binding}" Margin="85,290,0,0" AutoGenerateColumns="False" DataGridCell.Selected="dgSpell_RowSelected" HorizontalGridLinesBrush="#FF767575" HorizontalAlignment="Left" MinHeight="275" MaxWidth="730" GridLinesVisibility="Horizontal" Background="#FFEDFCFF" MaxHeight="400" VerticalAlignment="Top" ToolTip="Select a spell to edit/change" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="SpellId" IsReadOnly="True" Binding="{Binding Property}" Width="1.5*"/>
                                <DataGridTextColumn Header="Probability" IsReadOnly="True"  Binding="{Binding Value}" Width="1.7*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="6.8*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <TextBox x:Name="txtBoxSpellProbabilityDetails" HorizontalAlignment="Right" Margin="0,85,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="340" Height="480"/>
                        <Label Content="Spell Probability Details" HorizontalAlignment="Left" Margin="832,57,0,0" VerticalAlignment="Top" Width="225"/>
                        <Button x:Name="ButtonActualSpellChance" Content="Change Actual Spell Chance" HorizontalAlignment="Left" Margin="651,242,0,0" VerticalAlignment="Top" Width="164" Click="ButtonActualSpellChance_Click"/>
                        <TextBlock HorizontalAlignment="Left" Margin="85,0,0,2" VerticalAlignment="Bottom">
                            For more Info on how Spellbooks work, please see the ACE Wiki:
                            <Hyperlink NavigateUri="https://github.com/ACEmulator/ACE/wiki/Spell-Books" RequestNavigate="Hyperlink_RequestNavigate">
                                Ace Wiki - Spellbook Probability
                            </Hyperlink>
                        </TextBlock>
                    </Grid>
                </TabItem>
                <TabItem Header="CreateItems" Background="#FFE1E8F5">
                    <Grid Background="#FFE1E8F5">

                        <Label Content="Description" HorizontalAlignment="Left" Margin="222,131,0,0" VerticalAlignment="Top"/>
                        <Label Content="Create Items (Trophy)" HorizontalAlignment="Left" Margin="567,15,0,0" VerticalAlignment="Top" FontWeight="Bold" FontSize="14" Grid.ColumnSpan="2"/>
                        <Label Content="Palette" HorizontalAlignment="Left" Margin="222,36,0,0" VerticalAlignment="Top"/>
                        <Label Content="WCID" HorizontalAlignment="Left" Margin="92,84,0,0" VerticalAlignment="Top"/>
                        <Label Content="Stack Size" HorizontalAlignment="Left" Margin="92,131,0,0" VerticalAlignment="Top"/>
                        <Label Content="Destination Type" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top"/>
                        <Label Content="Drop Probablity (Shade)" HorizontalAlignment="Left" Margin="222,84,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="tbCreateItemsDestType" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,60,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="100" ToolTip="Destination Value"/>
                        <TextBox x:Name="tbCreateItemsPalette" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="222,60,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="100" ToolTip="Palette value"/>
                        <TextBox x:Name="tbCreateItemsWCID" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,105,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="100" ToolTip="WCID of Item to create"/>
                        <TextBox x:Name="tbCreateItemsDropRate" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="222,105,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="100" ToolTip="How often will this item drop"/>
                        <TextBox x:Name="tbCreateItemsStackSize" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,152,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="100" ToolTip="How many (if Stackable)"/>
                        <TextBox x:Name="tbCreateItemsDescription" HorizontalAlignment="Left" Margin="222,152,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="400" Grid.ColumnSpan="2" ToolTip="Name of item to create"/>
                        <Button x:Name="btnAddCreateItems" Content="Add " HorizontalAlignment="Left" Margin="457,54,0,0" VerticalAlignment="Top" Width="100" Click="btnAddCreateItem_Click" ToolTip="Add item"/>
                        <Button x:Name="btnUpdateCreateItems" Content="Update" HorizontalAlignment="Left" Margin="457,88,0,0" VerticalAlignment="Top" Click="btnUpdateCreateItem_Click" Width="100" ToolTip="Update selected item" IsDefault="True"/>
                        <Button x:Name="btnRemoveItems" Content="Remove" HorizontalAlignment="Left" Margin="457,119,0,0" VerticalAlignment="Top" Width="100" Click="btnRemoveCreateItem_Click" ToolTip="Remove selected item"/>

                        <DataGrid x:Name="dgCreateItems" ItemsSource="{Binding}" Margin="80,0,0,30" AutoGenerateColumns="False" DataGridCell.Selected="dgCreateList_RowSelected" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" MinWidth="900" MinHeight="380" VerticalAlignment="Bottom" HorizontalAlignment="Left" MaxWidth="997" MaxHeight="380" Grid.ColumnSpan="2" ToolTip="Select a property to edit/change" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="DestinationType" IsReadOnly="True" Binding="{Binding DestinationType}" Width="0.8*"/>
                                <DataGridTextColumn Header="WCID" IsReadOnly="True"  Binding="{Binding WCID}" Width="0.5*"/>
                                <DataGridTextColumn Header="StackSize" IsReadOnly="True"  Binding="{Binding StackSize}" Width="0.7*"/>
                                <DataGridTextColumn Header="Palette" IsReadOnly="True"  Binding="{Binding Palette}" Width="0.7*"/>
                                <DataGridTextColumn Header="DropPercent" IsReadOnly="True"  Binding="{Binding DropPercent}" Width="0.8*"/>
                                <DataGridTextColumn Header="TryToBond" IsReadOnly="True"  Binding="{Binding TryToBond}" Width="0.6*"/>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="2.9*"/>

                            </DataGrid.Columns>
                        </DataGrid>


                    </Grid>
                </TabItem>
                <TabItem Header="Emotes">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Emote Script" HorizontalAlignment="Left" Margin="0,3,0,0" VerticalAlignment="Top" FontWeight="Bold" FontSize="16" HorizontalContentAlignment="Center"/>
                        <Button x:Name="btnClearES" Content="Clear Emote Script" HorizontalAlignment="Right" Margin="0,10,270,0" VerticalAlignment="Top" OpacityMask="#FFE01313" Background="#FFE0FDFC" Width="106" Height="25" Click="btnClearES_Click" ToolTip="Clears all emote text">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </Button.Resources>
                            <Button.Effect>
                                <DropShadowEffect/>
                            </Button.Effect>
                        </Button>
                        <Button x:Name="btnLoadES" Content="Load Emote Script" HorizontalAlignment="Right" Margin="0,10,145,0" VerticalAlignment="Top" OpacityMask="#FFE01313" Background="#FFE0FDFC" Width="105" Height="25" Click="btnLoadES_Click" ToolTip="Load an ES File">
                            <Button.Effect>
                                <DropShadowEffect/>
                            </Button.Effect>
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                        <Button x:Name="btnSaveES" Content="Save Emote Script" HorizontalAlignment="Right" Margin="0,10,20,0" VerticalAlignment="Top" OpacityMask="#FFE01313" Background="#FFE0FDFC" Width="105" Height="25" Click="btnSaveES_Click" ToolTip="Saves an ES File">
                            <Button.Effect>
                                <DropShadowEffect/>
                            </Button.Effect>
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                        <RichTextBox x:Name="rtbEmoteScript" FontFamily="Courier New" Background="White" VerticalScrollBarVisibility="Auto" FontWeight="Bold" HorizontalAlignment="Left" Margin="10,47,10,10" MinHeight="196" AcceptsTab="True" IsTabStop="False" MinWidth="500">
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </RichTextBox.Resources>
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="RichTextBox"/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Instance ID">
                    <Grid Background="#FFE1E8F5">

                        <Label Content="Value" HorizontalAlignment="Left" Margin="92,63,0,0" VerticalAlignment="Top"/>
                        <Label Content="Instance ID" HorizontalAlignment="Left" Margin="92,5,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbIidProps" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" Width="547" ToolTip="Select the Property You wish to Add/Change"/>
                        <TextBox x:Name="tbiidValue" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="92,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" ToolTip="Property value"/>
                        <Button x:Name="btnAddIid" Content="Add " HorizontalAlignment="Left" Margin="315,84,0,0" VerticalAlignment="Top" Width="100"  ToolTip="Add property" Click="btnAddIid_Click"/>
                        <Button x:Name="btnUpdateIid" Content="Update" HorizontalAlignment="Left" Margin="425,84,0,0" VerticalAlignment="Top" Width="100" RenderTransformOrigin="1.465,0.555" ToolTip="Update selected property" Click="btnUpdateIid_Click" IsDefault="True"/>
                        <Button x:Name="btnRemoveIid" Content="Remove" HorizontalAlignment="Left" Margin="535,84,0,0" VerticalAlignment="Top" Width="100" ToolTip="Remove selected property" Click="btnRemoveIid_Click"/>
                        <DataGrid x:Name="dgIid" DataGridCell.Selected="dgIid_RowSelected" ItemsSource="{Binding}" Margin="92,125,202,30" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" MinWidth="5" ToolTip="Select a property to edit/change" MinHeight="420" MaxHeight="600" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" IsReadOnly="True" Binding="{Binding Path=Property}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Value" IsReadOnly="True"  Binding="{Binding Path=Value}" Width="1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Path=Description}" Width="8*"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>


                    </Grid>
                </TabItem>

                <TabItem Header="Book">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Max Pages" HorizontalAlignment="Left" Margin="507,0,0,0" VerticalAlignment="Top"/>
                        <Label Content="Max Chars Page" HorizontalAlignment="Left" Margin="610,2,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="tbMaxPages" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="500,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Max Pages for book"/>
                        <TextBox x:Name="tbMaxChars" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="618,27,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Max Chars per page (Set to 1000)"/>
                        <Button x:Name="btnAddBook" Content="Add Book" HorizontalAlignment="Left" Margin="453,60,0,0" VerticalAlignment="Top" MinWidth="85" Click="btnAddBook_Click" ToolTip="Add Book"/>
                        <Button x:Name="btnUpateBook" Content="Update Book" HorizontalAlignment="Left" Margin="561,60,0,0" VerticalAlignment="Top" MinWidth="85" Click="btnUpateBook_Click" ToolTip="Update Book"/>
                        <Button x:Name="btnRemoveBook" Content="Clear Book" HorizontalAlignment="Left" Margin="666,60,0,0" VerticalAlignment="Top" MinWidth="85" Click="btnRemoveBook_Click" ToolTip="Clear Book"/>
                        <DataGrid x:Name="dgBookInfo" ItemsSource="{Binding}" DataGridCell.Selected="dgBookInfo_RowSelected" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a Book to edit/change" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="201" Margin="452,92,0,0" MaxWidth="300" MinHeight="80" MaxHeight="80">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Max Number of Pages" IsReadOnly="True" Binding="{Binding MaxPages}" Width="5*"/>
                                <DataGridTextColumn Header="Max Chars per Page" IsReadOnly="True"  Binding="{Binding MaxCharsPage}" Width="5*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Label Content="Page ID" HorizontalAlignment="Left" Margin="150,238,0,0" VerticalAlignment="Top"/>
                        <Label Content="Create/Edit Page" HorizontalAlignment="Left" Margin="149,187,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <Label Content="Create/Edit Book" HorizontalAlignment="Left" Margin="286,72,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <Label Content="Ignore Author" HorizontalAlignment="Left" Margin="150,308,0,0" VerticalAlignment="Top"/>
                        <Label Content="Author Name" HorizontalAlignment="Left" Margin="150,273,0,0" VerticalAlignment="Top" Height="25" Width="83"/>
                        <Label Content="Page Text" HorizontalAlignment="Left" Margin="397,207,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="tbPageID" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="235,240,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" ToolTip="Book Page (starts at 0)"/>
                        <TextBox x:Name="tbAuthorName" HorizontalAlignment="Left" Margin="235,273,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="147" MinWidth="150" MaxWidth="150" ToolTip="Name of Author"/>
                        <RadioButton x:Name="rdbBookTrue" Content="True" HorizontalAlignment="Left" Margin="254,313,0,0" VerticalAlignment="Top" FontSize="12" ToolTip="Default should be False"/>
                        <RadioButton x:Name="rdbBookFalse" Content="False" HorizontalAlignment="Left" Margin="305,313,0,0" VerticalAlignment="Top" FontSize="12" ToolTip="Default should be False" IsChecked="True"/>
                        <TextBox x:Name="tbPageText" HorizontalAlignment="Left" Margin="395,234,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MinHeight="100" MinWidth="530" MaxWidth="530" MaxHeight="100" ToolTip="Enter in the page text" AcceptsReturn="True" AcceptsTab="True"/>
                        <Button x:Name="btnAddPage" Content="Add Page" HorizontalAlignment="Left" Margin="945,233,0,0" VerticalAlignment="Top" MinWidth="100" Click="btnAddPage_Click" ToolTip="Add a Page"/>
                        <Button x:Name="btnUpdatePage" Content="Update Page" HorizontalAlignment="Left" Margin="945,271,0,0" VerticalAlignment="Top" MinWidth="100" Click="btnUpdatePage_Click" ToolTip="Update Page" IsDefault="True"/>
                        <Button x:Name="btnRemovePage" Content="Remove Page" HorizontalAlignment="Left" Margin="945,308,0,0" VerticalAlignment="Top" MinWidth="100" Click="btnRemovePage_Click" ToolTip="Remove Page"/>

                        <DataGrid x:Name="dgBookPages" ItemsSource="{Binding}" DataGridCell.Selected="dgBookPages_RowSelected" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" ToolTip="Select a page to edit/change" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="900" Margin="150,360,0,0" MaxWidth="900" MinHeight="220" MaxHeight="220" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="PageID" IsReadOnly="True" Binding="{Binding PageID}" Width="1*"/>
                                <DataGridTextColumn Header="AuthorID" IsReadOnly="True"  Binding="{Binding AuthorID}" Width="1*"/>
                                <DataGridTextColumn Header="AuthorName" IsReadOnly="True"  Binding="{Binding AuthorName}" Width="1.5*"/>
                                <DataGridTextColumn Header="AuthorAccount" IsReadOnly="True"  Binding="{Binding AuthorAccount}" Width="1.5*"/>
                                <DataGridTextColumn Header="IgnoreAuthor" IsReadOnly="True"  Binding="{Binding IgnoreAuthor}" Width="1.4*"/>
                                <DataGridTextColumn Header="PageText" IsReadOnly="True"  Binding="{Binding PageText}" Width="3.6*"/>
                            </DataGrid.Columns>
                        </DataGrid>

                    </Grid>
                </TabItem>
                <TabItem Header="Generator">
                    <Grid Background="#FFE1E8F5">
                        <TextBox x:Name="tbGenerator" HorizontalAlignment="Center" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="10,51,10,10" Width="1150" Height="400" FontFamily="Courier New" FontSize="12" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Auto"/>

                    </Grid>
                </TabItem>

                <TabItem Header="Positions" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                    <Grid Background="#FFE1E8F5">
                        <Label Content="Position Type" HorizontalAlignment="Left" Margin="92,25,0,0" VerticalAlignment="Top"/>
                        <Label Content="Cell ID" HorizontalAlignment="Left" Margin="290,25,0,0" VerticalAlignment="Top"/>
                        <Label Content="X Origin" HorizontalAlignment="Left" Margin="440,25,0,0" VerticalAlignment="Top"/>
                        <Label Content="Y Origin" HorizontalAlignment="Left" Margin="591,25,0,0" VerticalAlignment="Top"/>
                        <Label Content="Z Origin" HorizontalAlignment="Left" Margin="741,25,0,0" VerticalAlignment="Top"/>
                        <Label Content="W Angle" HorizontalAlignment="Left" Margin="290,85,0,0" VerticalAlignment="Top"/>
                        <Label Content="X Angle" HorizontalAlignment="Left" Margin="440,85,0,0" VerticalAlignment="Top"/>
                        <Label Content="Y Angle" HorizontalAlignment="Left" Margin="590,85,0,0" VerticalAlignment="Top"/>
                        <Label Content="Z Angle" HorizontalAlignment="Left" Margin="740,85,0,0" VerticalAlignment="Top"/>
                        <Label Content="Paste a LOC to use. - Example: 0x5945010A [28.638000 -59.181000 -24.000000] -0.707107 0.000000 0.000000 -0.707107 " HorizontalAlignment="Left" Margin="92,225,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cbPosition" HorizontalAlignment="Left" Margin="92,52,0,0" VerticalAlignment="Top" ToolTip="Select the Position You wish to Add/Change" MinWidth="165" MaxWidth="165"/>
                        <TextBox x:Name="tbCellID" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="290,51,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="LandBlock"/>
                        <TextBox x:Name="tbOriginX" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="440,51,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="X Axis"/>
                        <TextBox x:Name="tbOriginY" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="590,51,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="Y Axis"/>
                        <TextBox x:Name="tbOriginZ" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="740,51,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="Z Axis"/>
                        <TextBox x:Name="tbAngleW" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="290,111,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="W Axis"/>
                        <TextBox x:Name="tbAngleX" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="440,111,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="X Axis"/>
                        <TextBox x:Name="tbAngleY" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="590,111,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="Y Axis"/>
                        <TextBox x:Name="tbAngleZ" PreviewTextInput="IntValidationTextBox" HorizontalAlignment="Left" Margin="740,111,0,0" TextWrapping="Wrap" VerticalAlignment="Top" MaxWidth="120" MinWidth="120" ToolTip="Z Axis"/>
                        <Button x:Name="btnAddPosition" Content="Add" HorizontalAlignment="Left" Margin="907,44,0,0" VerticalAlignment="Top" MinWidth="80" MaxWidth="100" MinHeight="25" MaxHeight="25" Click="btnAddPosition_Click" ToolTip="Add Position"/>
                        <Button x:Name="btnUpdatePosition" Content="Update" HorizontalAlignment="Left" Margin="907,74,0,0" VerticalAlignment="Top" MinWidth="80" MaxWidth="100" MinHeight="25" MaxHeight="25" Click="btnUpdatePosition_Click" ToolTip="Update Position" IsDefault="True"/>
                        <Button x:Name="btnRemovePosition" Content="Remove" HorizontalAlignment="Left" Margin="907,108,0,0" VerticalAlignment="Top" MinWidth="80" MaxWidth="100" MinHeight="25" MaxHeight="25" Click="btnRemovePosition_Click" ToolTip="Remove Position"/>
                        <TextBox x:Name="tbPositionLoc" HorizontalAlignment="Left" Margin="92,254,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" MinWidth="650" ToolTip="Paste a Location"/>
                        <Button x:Name="btnUseLoc" Content="Use This Location" HorizontalAlignment="Left" Margin="800,253,0,0" VerticalAlignment="Top" MinWidth="120" MaxWidth="120" Click="btnUseLoc_Click" ToolTip="Click to populate the above fields with the location you entered to the left"/>
                        <DataGrid x:Name="dgPosition" DataGridCell.Selected="dgPosition_RowSelected" ItemsSource="{Binding}" Margin="92,300,202,71" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FF767575" VerticalGridLinesBrush="#FF747474" Background="#FFFFE9E9" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" MinWidth="900" ToolTip="Select a position to edit/change" MaxWidth="900" MinHeight="200" MaxHeight="200" HorizontalAlignment="Left" VerticalAlignment="Top" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Postion Type" IsReadOnly="True" Binding="{Binding Path=PositionType}" Width="0.9*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Cell ID" IsReadOnly="True"  Binding="{Binding Path=CellID}" Width="1.1*"></DataGridTextColumn>
                                <DataGridTextColumn Header="X Origin" IsReadOnly="True"  Binding="{Binding Path=OriginX}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y Origin" IsReadOnly="True"  Binding="{Binding Path=OriginY}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Z Origin" IsReadOnly="True"  Binding="{Binding Path=OriginZ}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="W Angle" IsReadOnly="True"  Binding="{Binding Path=AngleW}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="X Angle" IsReadOnly="True"  Binding="{Binding Path=AngleX}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y Angle" IsReadOnly="True"  Binding="{Binding Path=AngleY}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Z Angle" IsReadOnly="True"  Binding="{Binding Path=AngleZ}" Width="0.8*"></DataGridTextColumn>
                                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Path=Description}" Width="2.4*"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>
            <StatusBar x:Name="WFStatusBar" VerticalAlignment="Bottom" MinWidth="1200" MinHeight="25">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4.8*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="1.2*"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <TextBlock x:Name="txtBlockFileStatus"></TextBlock>
                </StatusBarItem>
                <StatusBarItem Grid.Column="1" HorizontalAlignment="Right">
                    <TextBlock x:Name="txtBlockProgressBar"></TextBlock>
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <ProgressBar x:Name="pgBarOne" Width="225" Height="18">

                    </ProgressBar>
                </StatusBarItem>
                <StatusBarItem Grid.Column="3" HorizontalAlignment="Right">
                    <TextBlock x:Name="txtblockVersion" TextAlignment="Right" HorizontalAlignment="Right" Margin="0,0,20,0" FlowDirection="LeftToRight" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontWeight="Bold">Version</TextBlock>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>

</Window>
